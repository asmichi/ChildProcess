trigger:
  batch: true
  branches:
    include:
    - master
    - release/*
  paths:
    exclude:
    - BUILDING.md
    - README.md

pr:
  branches:
    include:
    - master
    - release/*

variables:
  SolutionFile: 'src/ChildProcess.sln'

jobs:
- job: build_native_linux

  pool:
    vmImage: 'ubuntu-18.04'

  container: 'asmichi/childprocess-buildtools-ubuntu:18.04.20210606.1'

  steps:
  - task: Bash@3
    displayName: 'Build Native Linux'
    inputs:
      targetType: 'filePath'
      filePath: 'src/ChildProcess.Native/Subbuild-unix.sh'
      arguments: 'obj/Subbuild-linux Linux'

  - publish: 'obj/Subbuild-linux/bin'
    artifact: 'ChildProcess.Native-linux'

- job: build_native_osx

  pool:
    vmImage: 'macOS-10.15'

  steps:
  - task: Bash@3
    displayName: 'Build Native macOS'
    inputs:
      targetType: 'filePath'
      filePath: 'src/ChildProcess.Native/Subbuild-unix.sh'
      arguments: 'obj/Subbuild-osx OSX'

  - publish: 'obj/Subbuild-osx/bin'
    artifact: 'ChildProcess.Native-osx'

- job: build_native_win

  pool:
    vmImage: 'windows-2019'

  steps:
  - task: PowerShell@2
    displayName: 'Set VSDEVCMD_LOCATION'
    inputs:
      pwsh: true
      targetType: 'filePath'
      failOnStderr: true
      filePath: '$(Build.SourcesDirectory)/build/SetVsDevCmdLocation.ps1'

  - task: BatchScript@1
    displayName: 'Call VsDevCmd.bat'
    inputs:
      filename: '$(VSDEVCMD_LOCATION)'
      arguments: '-no_logo -arch=amd64 -host_arch=amd64'
      failOnStderr: true
      modifyEnvironment: true

  - task: PowerShell@2
    displayName: 'Build Native Windows'
    inputs:
      pwsh: true
      targetType: 'filePath'
      filePath: 'src/ChildProcess.Native/Subbuild-win.ps1'
      arguments: '$(Build.SourcesDirectory)'

  - publish: 'bin/ChildProcess.Native'
    artifact: 'ChildProcess.Native-win'

- job: test_linux

  dependsOn:
    - build_native_linux
    - build_native_osx

  continueOnError: true # Work around https://github.com/dotnet/sdk/issues/13431

  pool:
    vmImage: 'ubuntu-18.04'

  steps:
  - template: 'build/test-native-unix.yml'
    parameters:
      platform: linux

- job: test_osx

  dependsOn:
    - build_native_linux
    - build_native_osx

  continueOnError: true # Work around https://github.com/dotnet/sdk/issues/13431

  pool:
    vmImage: 'macOS-10.15'

  steps:
  - template: 'build/test-native-unix.yml'
    parameters:
      platform: osx

- job: test_win_and_pack

  dependsOn:
    - build_native_linux
    - build_native_osx
    - build_native_win

  pool:
    vmImage: 'windows-2019'

  steps:
  - template: 'build/prepare-variables.yml'
  - template: 'build/prepare-dotnet.yml'

  - task: DownloadPipelineArtifact@2
    inputs:
      source: current
      artifact: 'ChildProcess.Native-linux'
      path: '$(Build.SourcesDirectory)/bin/ChildProcess.Native'

  - task: DownloadPipelineArtifact@2
    inputs:
      source: current
      artifact: 'ChildProcess.Native-osx'
      path: '$(Build.SourcesDirectory)/bin/ChildProcess.Native'

  - task: DownloadPipelineArtifact@2
    inputs:
      source: current
      artifact: 'ChildProcess.Native-win'
      path: '$(Build.SourcesDirectory)/bin/ChildProcess.Native'

  - template: 'build/build-and-test.yml'
    parameters:
      platform: win

  - task: NuGetToolInstaller@0
    displayName: 'Use NuGet 5.8.1'
    inputs:
      versionSpec: 5.8.1

  - task: DotNetCoreCLI@2
    displayName: 'dotnet pack'
    inputs:
      command: custom
      custom: pack
      arguments: '$(Build.SourcesDirectory)/src/ChildProcess/ChildProcess.csproj $(CommonBuildOptions) --output $(Build.ArtifactStagingDirectory)'

  - task: NuGetCommand@2
    displayName: 'NuGet push'
    inputs:
      command: push
      packagesToPush: '$(Build.ArtifactStagingDirectory)/**/*.nupkg;$(Build.ArtifactStagingDirectory)/**/*.snupkg'
      allowPackageConflicts: true
      configurationToPack: 'Release'
      nuGetFeedType: 'internal'
      publishVstsFeed: 'ChildProcess/CI'

  - task: PublishBuildArtifacts@1
    displayName: 'Publish Artifact: drop'
    inputs:
      PathtoPublish: '$(Build.ArtifactStagingDirectory)'
