trigger:
  batch: true
  branches:
    include:
    - master
    - release/*
  paths:
    # Sync with FetchNativeLib.ps1
    exclude:
    - BUILDING.md
    - README.md
    - README.ja.md

pr:
  branches:
    include:
    - master
    - release/*

variables:
  SolutionFile: 'ChildProcess.sln'

jobs:
- job: build_native_linux

  pool:
    vmImage: 'ubuntu-20.04'

  container: 'asmichi/childprocess-buildtools-ubuntu-crosssysroot:22.04.20240702.1 '

  steps:
  - task: Bash@3
    displayName: 'Build Native Linux'
    inputs:
      targetType: 'filePath'
      filePath: 'src/ChildProcess.Native/Subbuild-unix.sh'
      arguments: 'Linux obj/Subbuild-linux bin/ChildProcess.Native'

  - publish: 'bin/ChildProcess.Native'
    artifact: 'ChildProcess.Native-linux'

- job: build_native_osx

  pool:
    vmImage: 'macos-12'

  steps:
  - task: Bash@3
    displayName: 'Build Native macOS'
    inputs:
      targetType: 'filePath'
      filePath: 'src/ChildProcess.Native/Subbuild-unix.sh'
      arguments: 'OSX obj/Subbuild-osx bin/ChildProcess.Native'

  - publish: 'bin/ChildProcess.Native'
    artifact: 'ChildProcess.Native-osx'

- job: build_native_win

  pool:
    vmImage: 'windows-2019'

  steps:
  - task: PowerShell@2
    displayName: 'Set VSDEVCMD_LOCATION'
    inputs:
      pwsh: true
      targetType: 'filePath'
      failOnStderr: true
      filePath: '$(Build.SourcesDirectory)/build/SetVsDevCmdLocation.ps1'

  - task: BatchScript@1
    displayName: 'Call VsDevCmd.bat'
    inputs:
      filename: '$(VSDEVCMD_LOCATION)'
      arguments: '-no_logo -arch=amd64 -host_arch=amd64'
      failOnStderr: true
      modifyEnvironment: true

  - task: PowerShell@2
    displayName: 'Build Native Windows'
    inputs:
      pwsh: true
      targetType: 'filePath'
      filePath: 'src/ChildProcess.Native/Subbuild-win.ps1'
      arguments: '$(Build.SourcesDirectory)'

  - publish: 'bin/ChildProcess.Native'
    artifact: 'ChildProcess.Native-win'

- job: build_and_pack

  dependsOn:
    - build_native_linux
    - build_native_osx
    - build_native_win

  pool:
    vmImage: 'ubuntu-20.04'

  steps:
  - template: 'build/azure-pipelines/build-and-pack.yml'

- job: test_linux_x64

  dependsOn:
    - build_and_pack
    - build_native_linux

  pool:
    vmImage: 'ubuntu-20.04'

  steps:
  - template: 'build/azure-pipelines/test.yml'
    parameters:
      platform: linux
      rid: linux-x64

- job: test_linux_alpine_x64

  dependsOn:
    - build_and_pack
    - build_native_linux

  pool:
    vmImage: 'ubuntu-20.04'

  container: 'asmichi/node-azuredevops:20-alpine3.20'

  steps:
  - template: 'build/azure-pipelines/test.yml'
    parameters:
      platform: linux
      rid: linux-musl-x64

- job: test_osx_x64

  dependsOn:
    - build_and_pack
    - build_native_osx

  pool:
    vmImage: 'macos-12'

  steps:
  - template: 'build/azure-pipelines/test.yml'
    parameters:
      platform: osx
      rid: osx-x64

- job: test_win_x64

  dependsOn:
    - build_and_pack
    - build_native_win

  pool:
    vmImage: 'windows-2019'

  steps:
  - template: 'build/azure-pipelines/test.yml'
    parameters:
      platform: win
      rid: win-x64
