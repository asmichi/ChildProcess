<Project>

  <PropertyGroup>
    <TargetFramework>netcoreapp3.1</TargetFramework>
  </PropertyGroup>

  <Import Project="Sdk.props" Sdk="Microsoft.NET.Sdk" />

  <PropertyGroup>
    <AllowUnsafeBlocks>true</AllowUnsafeBlocks>
    <AssemblyName>Asmichi.ChildProcess</AssemblyName>
    <CodeAnalysisRuleSet>..\PublicAssembly.ruleset</CodeAnalysisRuleSet>
    <DocumentationFile>$(OutDir)$(AssemblyName).xml</DocumentationFile>
    <RootNamespace>Asmichi</RootNamespace>
    <DefineConstants Condition="'$(AddImportSearchPathAssemblyDirectory)'=='true'">$(DefineConstants);ADD_IMPORT_SEARCH_PATH_ASSEMBLY_DIRECTORY</DefineConstants>
  </PropertyGroup>

  <PropertyGroup>
    <IsPackable>true</IsPackable>
    <PackageId>Asmichi.ChildProcess</PackageId>
  </PropertyGroup>

  <Import Project="$(WorktreeRoot)\build\msbuild\ChildProcessNativeFiles.targets" />

  <!-- *** Invoke build/FetchNativeLib.ps1 beforehand! ***  -->
  <Target Name="TransformChildProcessNativeFileToContent" BeforeTargets="BeforeBuild">
    <ItemGroup>
      <!-- See https://github.com/NuGet/Home/issues/6645 -->
      <!--
        This only works in the NuGet (PackageReference) scenario. Projects that ProjectReference this project
        will not receive these runtime assets in their deps.json files. See https://github.com/dotnet/sdk/issues/1088.
      -->
      <!-- This is here because item transforms only work within a target. -->
      <Content Include="@(ChildProcessNativeFile -> '$(BinDir)ChildProcess.Native\%(RuntimeIdentifier)\$(Configuration)\%(Filename)%(Extension)')">
        <Visible>true</Visible>
        <CopyToOutputDirectory>PreserveNewest</CopyToOutputDirectory>
        <Link>%(ChildProcessNativeFile.Identity)</Link>
        <PackagePath>%(ChildProcessNativeFile.RelativeDir)</PackagePath>
      </Content>
    </ItemGroup>
  </Target>

  <Import Project="Sdk.targets" Sdk="Microsoft.NET.Sdk" />

</Project>
