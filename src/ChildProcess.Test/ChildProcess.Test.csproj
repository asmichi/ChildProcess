<Project>

  <PropertyGroup>
    <TargetFramework>net8.0</TargetFramework>
  </PropertyGroup>

  <Import Project="Sdk.props" Sdk="Microsoft.NET.Sdk" />

  <PropertyGroup>
    <AssemblyName>Asmichi.ChildProcess.Test</AssemblyName>
    <CodeAnalysisRuleSet>..\PrivateAssembly.ruleset</CodeAnalysisRuleSet>
    <IsPackable>false</IsPackable>
    <RootNamespace>Asmichi</RootNamespace>
  </PropertyGroup>

  <ItemGroup>
    <PackageReference Include="Microsoft.NET.Test.Sdk" Version="16.11.0" />
    <PackageReference Include="xunit" Version="2.4.2" />
    <PackageReference Include="xunit.runner.visualstudio" Version="2.4.5" PrivateAssets="all" IncludeAssets="runtime; build; native; contentfiles; analyzers" />
  </ItemGroup>

  <ItemGroup>
    <AdditionalFiles Include="..\stylecop.json" />
    <None Include="xunit.runner.json">
      <CopyToOutputDirectory>PreserveNewest</CopyToOutputDirectory>
    </None>
  </ItemGroup>

  <PropertyGroup>
    <NativeAssetsArch Condition="'$([System.Runtime.InteropServices.RuntimeInformation]::OSArchitecture)' == 'X64'">x64</NativeAssetsArch>
    <NativeAssetsArch Condition="'$([System.Runtime.InteropServices.RuntimeInformation]::OSArchitecture)' == 'X86'">x86</NativeAssetsArch>
    <NativeAssetsArch Condition="'$([System.Runtime.InteropServices.RuntimeInformation]::OSArchitecture)' == 'Arm'">arm</NativeAssetsArch>
    <NativeAssetsArch Condition="'$([System.Runtime.InteropServices.RuntimeInformation]::OSArchitecture)' == 'Arm64'">arm64</NativeAssetsArch>
  </PropertyGroup>
  <PropertyGroup Condition="$([MSBuild]::IsOSPlatform('Windows'))">
    <NativeAssetsRid>win-$(NativeAssetsArch)</NativeAssetsRid>
    <NativeAssetsExeExtension>.exe</NativeAssetsExeExtension>
  </PropertyGroup>
  <PropertyGroup Condition="$([MSBuild]::IsOSPlatform('Linux'))">
    <NativeAssetsRid>linux-$(NativeAssetsArch)</NativeAssetsRid>
    <NativeAssetsExeExtension></NativeAssetsExeExtension>
  </PropertyGroup>
  <PropertyGroup Condition="$([MSBuild]::IsOSPlatform('OSX'))">
    <NativeAssetsRid>osx-$(NativeAssetsArch)</NativeAssetsRid>
    <NativeAssetsExeExtension></NativeAssetsExeExtension>
  </PropertyGroup>

  <ItemGroup>
    <TestChildBin Include="$(BinDir)TestChild\AnyCPU\$(Configuration)\net8.0\TestChild.deps.json" />
    <TestChildBin Include="$(BinDir)TestChild\AnyCPU\$(Configuration)\net8.0\TestChild.dll" />
    <TestChildBin Include="$(BinDir)TestChild\AnyCPU\$(Configuration)\net8.0\TestChild.runtimeconfig.json" />
    <!-- Copy the TestChildNative executable for the current runtime so that our tests can pick it. -->
    <TestChildBin Include="$(BinDir)ChildProcess.Native\$(NativeAssetsRid)\$(Configuration)\TestChildNative$(NativeAssetsExeExtension)" />
    <Content Include="@(TestChildBin)">
      <Visible>false</Visible>
      <CopyToOutputDirectory>PreserveNewest</CopyToOutputDirectory>
    </Content>
  </ItemGroup>

  <ItemGroup>
    <ProjectReference Include="..\ChildProcess\ChildProcess.csproj" />
    <!-- Workaround for expressing BuildOrderingOnly: https://github.com/microsoft/msbuild/issues/3843 -->
    <!-- NOTE: This workaround does not work in Visual Studio when the target project uses TargetFramework*s*. -->
    <ProjectReference Include="..\TestChild\TestChild.csproj" ReferenceOutputAssembly="false" SkipGetTargetFrameworkProperties="true" GlobalPropertiesToRemove="TargetFramework" />
  </ItemGroup>

  <Import Project="$(WorktreeRoot)\build\msbuild\InjectChildProcessNativeFileDeps.targets" />

  <Import Project="Sdk.targets" Sdk="Microsoft.NET.Sdk" />

</Project>
